#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

smtp {
    host=${SENDGRID_SMTP_HOST}
    port=587
    user=${SENDGRID_USERNAME}
    password=${SENDGRID_PASSWORD}
    ssl=true
    channel=starttls
    from="breizhcamp@gmail.com"
}

securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo="/"

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo="/"

	#
	# Enable SSL for oauth callback urls and login/signup/password recovery pages
	#
	ssl=false

	twitter {
		requestTokenUrl="https://api.twitter.com/oauth/request_token"
		accessTokenUrl="https://api.twitter.com/oauth/access_token"
		authorizationUrl="https://api.twitter.com/oauth/authorize"
		consumerKey=${TWITTER_KEY}
		consumerSecret=${TWITTER_SECRET}
	}

	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=${GOOGLE_CLIENTID}
		clientSecret=${GOOGLE_CLIENTSECRET}
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

	linkedin {
		authorizationUrl="https://www.linkedin.com/uas/oauth2/authorization"
		accessTokenUrl="https://www.linkedin.com/uas/oauth2/accessToken"
		clientId=${LINKEDIN_CLIENTID}
		clientSecret=${LINKEDIN_CLIENTID}
		scope="r_basicprofile r_emailaddress"
	}

	github {
		authorizationUrl="https://github.com/login/oauth/authorize"
		accessTokenUrl="https://github.com/login/oauth/access_token"
		clientId=${GITHUB_CLIENTID}
		clientSecret=${GITHUB_CLIENTSECRET}
		scope="user:email"
	}

	userpass {
		#
		# Enable username support, otherwise SecureSocial will use the emails as user names
		#
		withUserNameSupport=false
		sendWelcomeEmail=true
		enableGravatarSupport=true
		tokenDuration=60
		tokenDeleteInterval=5
                minimumPasswordLength=8
                enableTokenJob=true
                hasher=bcrypt
	}
}
